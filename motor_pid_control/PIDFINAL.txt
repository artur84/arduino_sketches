#include <Encoder.h>
#include <math.h>
int motor=12;
Encoder myEnc(20, 21);
unsigned long lastTime = 0;
unsigned newTime;
double newPosition=0, oldPosition=0,  posicion = 0,delta_t=0;
///////////////////////////////////////////////////////////////////
double ref=50;   // referencia.
double rpm;                 // Salida
double error;              // error
double errorPass=0;          // Suma del error para la parte integral
double errorAnt=0;           // error anterior para la derivada
double U=0; 

//////////////////////////constantes del control//////////////////
double tiempoMuestreo=1; ///////tiempo de muestreo.
double Kp=0.1; //constante del controlador;           kp=2.ki=0.001,kd=2.
double Ki=0;
double Kd=0;

//////////////////////////////////////////////

void setup(void)
{
  pinMode(motor,OUTPUT);
  Serial.begin(9600);
 
}
void loop(void){

  newTime = millis ();
  delta_t = newTime - lastTime;

     if(delta_t >= tiempoMuestreo){
       //////////////////////lectura del encoder/////////////////////////
        newPosition = myEnc.read(); 
        posicion = newPosition - oldPosition;
        
        rpm = (posicion/delta_t)*7.1428; //////////////////// el numero 7.1428 sale de la serie de operaciones para la convercion de pulsos que 
                                                         //envia el encoder a RPM.
       error = ref - rpm;
       errorPass=error*tiempoMuestreo+errorPass;        
       double errorD =(error-errorAnt)/tiempoMuestreo;  // cálculo derivativo 
       float P=Kp*error;                                // control proporcional
       float I=Ki*errorPass;                            // control Integral
       float D=Kd*errorD;
       ///////////////control PID para motor,////////////////////.
       U=(P+I+D)+U;   
       
       if(U < 0)
        {
          U =0;
        }
       if(U > 255)
        {
          U =255;
        }
   
        
       errorAnt=error;
       oldPosition = newPosition; 
       
      /* Serial.println("U");
       Serial.println(U,3);
       Serial.println("/////////");
       Serial.println("RPM");
       */
       Serial.println(rpm,3);
       
       analogWrite(motor,U);
 //////////////////////////////////////////////////////////////////
    }
    lastTime = newTime; 
}
